=pod

=head1 NAME

Web::Starch::Store::DBI - Session storage backend using DBI.

=head1 SYNOPSIS

    my $starch = Web::Starch->new(
        store => {
            class => '::DBI',
            dbh => [
                $dsn,
                $username,
                $password,
                { RaiseError => 1 },
            ],
            table => 'my_sessions',
        },
    );

=head1 DESCRIPTION

This Starch store uses L<DBI> to set and get session data.

Consider using L<Web::Starch::Store::DBIxConnector> instead
of this store as L<DBIx::Connector> provides superior re-connection
and transaction handling capabilities.

The table in your database should contain three columns.  This
is the SQLite syntax for creating a compatible table which you
can modify to work for your particular database's syntax:

    CREATE TABLE sessions (
        key TEXT NOT NULL PRIMARY KEY,
        data TEXT NOT NULL,
        expiration INTEGER NOT NULL
    )

=head1 REQUIRED ARGUMENTS

=head2 dbh

This must be set to either array ref arguments for L<DBI/connect>
or a pre-built object (often retrieved using a method proxy).

When configuring Starch from static configuration files using a
L<method proxy|Web::Starch::Manual/METHOD PROXIES>
is a good way to link your existing L<DBI> object constructor
in with Starch so that starch doesn't build its own.

=head1 OPTIONAL ARGUMENTS

=head2 serializer

A L<Data::Serializer::Raw> for serializing the session data for storage
in the L</data_column>.  Can be specified as string containing the
serializer name, a hashref of Data::Serializer::Raw arguments, or as a
pre-created Data::Serializer::Raw object.  Defaults to C<JSON>.

Consider using the C<JSON::XS> or C<Sereal> serializers for speed.

C<Sereal> will likely be the fastest and produce the most compact data.

=head2 table

The table name where sessions are stored in the database.
Defaults to C<sessions>.

=head2 key_column

The column in the L</table> where the session ID is stored.
Defaults to C<key>.

=head2 data_column

The column in the L</table> which wil hold the session
data.  Defaults to C<data>.

=head2 expiration_column

The column in the L</table> which will hold the epoch time
when the session should be expired.  Defaults to C<expiration>.

=head1 ATTRIBUTES

=head2 insert_sql

The SQL used to create session data.

=head2 update_sql

The SQL used to update session data.

=head2 exists_sql

The SQL used to confirm whether session data already exists.

=head2 select_sql

The SQL used to retrieve session data.

=head2 delete_sql

The SQL used to delete session data.

=head1 METHODS

=head2 set

Set L<Web::Starch::Store/set>.

=head2 get

Set L<Web::Starch::Store/get>.

=head2 remove

Set L<Web::Starch::Store/remove>.

=head1 AUTHOR

Aran Clary Deltac <bluefeetE<64>gmail.com>

=head1 ACKNOWLEDGEMENTS

Thanks to L<ZipRecruiter|https://www.ziprecruiter.com/>
for encouraging their employees to contribute back to the open
source ecosystem.  Without their dedication to quality software
development this distribution would not exist.

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
